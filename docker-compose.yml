---
version: "3.3"

services:
  main:
    build: .
    depends_on:
      seedpostgresdb:
        condition: service_completed_successfully
    ports:
      - "8081:8081"
    environment:
      # setting up koanf prefix to read environment variables
      CONFIG_PREFIX: "WS_"

      # logging
      WS_LOG_LEVEL: "debug"

      # metrics
      WS_METRICS_ENABLED: "true"
      WS_METRICS_PORT: "8081"

      # tracing
      WS_TRACING_ENABLED: "false"
      WS_TRACING_SAMPLERATE: "1.0"
      WS_TRACING_SERVICE: "wikipedia-spider"
      WS_TRACING_VERSION: "0.0.1"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://tempo:4317"

      # spider
      WS_SPIDER_USER_AGENT: "github.com/michaelpeterswa/wikipedia-spider"
      WS_SPIDER_ALLOWED_DOMAINS: "en.wikipedia.org"
      WS_SPIDER_URL_BASE: "https://en.wikipedia.org"
      WS_SPIDER_START_SLUG: "/wiki/North_Bend,_Washington"
      WS_SPIDER_MAX_DEPTH: "3"

      # postgres
      WS_POSTGRES_CONN_STRING: "postgres://postgres:example@postgres:5432/postgres?sslmode=disable" # yamllint disable-line rule:line-length

      # grpc (otlp tracing)
      GRPC_GO_LOG_VERBOSITY_LEVEL: 99
      GRPC_GO_LOG_SEVERITY_LEVEL: info

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  tempo:
    image: grafana/tempo:latest
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yaml
      - /tmp/tempo-data:/tmp/tempo
    ports:
      - "4317:4317" #  otlp grpc
      - "4318:4318" #  otlp http

  grafana:
    image: grafana/grafana
    volumes:
      - ./docker/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./docker/grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    ports:
      - "3000:3000"

  postgres:
    image: postgres
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: example
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5

  seedpostgresdb:
    image: migrate/migrate
    volumes:
      - ./docker/postgres/migrations:/migrations
    entrypoint: >
      /bin/sh -c 'sleep 5 && migrate -path=/migrations/ -database
      "postgres://postgres:example@postgres:5432/postgres?sslmode=disable" up'
    depends_on:
      postgres:
        condition: service_healthy

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "8082:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: password
    volumes:
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
